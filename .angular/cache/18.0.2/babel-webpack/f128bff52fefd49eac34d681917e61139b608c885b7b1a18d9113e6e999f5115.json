{"ast":null,"code":"import { global } from './global.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(_http) {\n      this._http = _http;\n      this._servicesProduct = [];\n      this.url = global.url;\n    }\n    get getProduct() {\n      return [...this._servicesProduct];\n    }\n    set setProduct(product) {\n      this._servicesProduct.push(product);\n    }\n    //METODOS PARA EL CRUD DE SERVICE\n    searchProduct(filtro) {\n      return this._http.get(this.url + 'readProduct/' + filtro);\n    }\n    removeProduct(productid) {\n      return this._http.delete(this.url + 'deleteProduct/' + productid);\n    }\n    updateProduct(productid, productName, productPrice, productDescription, productQualification) {\n      return this._http.put(this.url + 'updateProduct/' + productid, {\n        productName,\n        productPrice,\n        productDescription,\n        productQualification\n      });\n    }\n    updateProductQualification(qualification, id) {\n      console.log(`datos del metodo ${qualification}   ${id}`);\n      return this._http.patch(this.url + 'updateProductQualification/' + id, qualification);\n    }\n    listProduct() {\n      return this._http.get(this.url + 'listProduct');\n    }\n    saveProducts(productName, productPrice, productDescription, productQualication) {\n      return this._http.post(this.url + 'registerProduct', {\n        productName,\n        productPrice,\n        productDescription,\n        productQualication\n      });\n    }\n    topvendidos() {\n      return this._http.get(this.url + 'listTopProduct');\n    }\n    static #_ = this.ɵfac = function ProductService_Factory(t) {\n      return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductService,\n      factory: ProductService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}