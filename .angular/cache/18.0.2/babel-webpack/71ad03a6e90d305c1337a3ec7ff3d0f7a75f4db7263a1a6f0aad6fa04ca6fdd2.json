{"ast":null,"code":"import { global } from './global.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AppointmentService = /*#__PURE__*/(() => {\n  class AppointmentService {\n    constructor(_http) {\n      this._http = _http;\n      this._appointmentService = [];\n      this._appointmentid = [];\n      this.url = global.url;\n    }\n    get getAppointment() {\n      return [...this._appointmentService];\n    }\n    set setAppointment(product) {\n      this._appointmentService.push(product);\n    }\n    get getAppointmentSession() {\n      return [...this._appointmentid];\n    }\n    set setAppointmentSession(userid) {\n      this._appointmentid.push(userid);\n    }\n    //METODOS PARA EL CRUD DE SERVICE\n    searchAppointment(id) {\n      return this._http.get(this.url + 'readAppointment/' + id);\n    }\n    removeAppointment(appointmentId) {\n      return this._http.delete(this.url + 'deleteAppointment/' + appointmentId);\n    }\n    updateAppointment(user, service, pet, appointmentId) {\n      return this._http.put(this.url + 'updateAppointment/' + appointmentId, {\n        user,\n        service,\n        pet,\n        appointmentId\n      });\n    }\n    listAppointment() {\n      return this._http.get(this.url + 'listAppointment');\n    }\n    saveAppointment(user, service, pet, appointmentDate) {\n      console.log(user, pet, service, appointmentDate);\n      return this._http.post(this.url + 'registerAppointment', {\n        pet,\n        service,\n        user,\n        appointmentDate\n      });\n    }\n    estadoCita(id, appointmentStatus) {\n      return this._http.patch(this.url + 'updateStatus/' + id, appointmentStatus);\n    }\n    listarCitasUser(id) {\n      return this._http.get(this.url + 'appointmentStateQuery/' + id);\n    }\n    static #_ = this.ɵfac = function AppointmentService_Factory(t) {\n      return new (t || AppointmentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AppointmentService,\n      factory: AppointmentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AppointmentService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}