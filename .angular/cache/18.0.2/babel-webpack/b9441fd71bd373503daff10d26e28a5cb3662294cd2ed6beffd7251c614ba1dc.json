{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/appointment.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"txtid\"];\nconst _c1 = [\"datefecha\"];\nconst _c2 = [\"selectPet\"];\nconst _c3 = [\"selectService\"];\nconst _c4 = [\"selectUser\"];\nconst _c5 = [\"btnGuardar\"];\nconst _c6 = [\"btnActualizar\"];\nconst _c7 = [\"btnCancelar\"];\nconst _c8 = [\"btnEliminar\"];\nconst _c9 = [\"btnservice\"];\nconst _c10 = [\"btnpet\"];\nfunction AutorizarCitaComponent_tr_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AutorizarCitaComponent_tr_28_Template_button_click_2_listener() {\n      const item_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.autorizar(item_r2));\n    });\n    i0.ɵɵtext(3, \"Autorizar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AutorizarCitaComponent_tr_28_Template_button_click_5_listener() {\n      const item_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.negar(item_r2));\n    });\n    i0.ɵɵtext(6, \"Rechazar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(item_r2.appointmentid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.appointmentDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.petId.petName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.serviceId.serviceName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.appointmentUser.personName);\n  }\n}\nexport let AutorizarCitaComponent = /*#__PURE__*/(() => {\n  class AutorizarCitaComponent {\n    constructor(_appointment, _redender) {\n      this._appointment = _appointment;\n      this._redender = _redender;\n    }\n    ngOnInit() {\n      this.listarAppointment();\n      // this.listarServices();\n      // this.listarPet();\n      this.inicializar();\n      localStorage.setItem(\"delevery\", \"0\");\n      localStorage.setItem(\"productos\", \"0\");\n    }\n    // get getPet(): Pet[]\n    // {\n    //   return this._servicePet.getPet;\n    // }\n    // get getService(): Service[]\n    // {\n    //   return this._service.getService;\n    // }\n    get getAppointment() {\n      return this._appointment.getAppointment;\n    }\n    // listarPet()\n    // {\n    //   var valor: any = localStorage.getItem(\"id\");\n    //   this._servicePet.listPetUser(valor).subscribe((response)=>\n    //   {\n    //     response.forEach((element:any) => {\n    //       var  pet : Pet ={\n    //       user_person_personid :0,\n    //       petId: element[0],\n    //       petWeight: 0,\n    //       petName: element[3],\n    //       petBreed: element[2],\n    //       petCategory: element[4],\n    //       petAge: element[1],\n    //       }\n    //       this._servicePet.setPet = pet\n    //     });\n    //   });\n    // }\n    // listarServices()\n    // {\n    //   this._service.listServices().subscribe((response)=>\n    //   {\n    //     response.forEach((element:any) => {\n    //       let estado : string;\n    //       if(element['serviceStateId'] == 1)\n    //       {\n    //         estado = 'En espera'\n    //       }else if(element['serviceStateId'] == 2)\n    //       {\n    //         estado = 'En proceso'\n    //       }\n    //       else {\n    //         estado = 'Finalizado'\n    //       }\n    //       var  service : Service ={\n    //         serviceId : element['serviceId'],\n    //         serviceDescription: element['serviceDescription'],\n    //         serviceState: estado,\n    //         serviceName: element['serviceName'],\n    //         serviceQualification: 0,\n    //         servicePrice: element['servicePrice']\n    //       }\n    //       this._service.setService = service\n    //      console.log(response)\n    //     });\n    //   });\n    // }\n    listarAppointment() {\n      this._appointment.listAppointment().subscribe(response => {\n        console.log(response);\n        response.forEach(element => {\n          var appointment = {\n            appointmentid: element['appointmentId'],\n            appointmentDate: element['appointmentDate'],\n            petId: element['pet'],\n            serviceId: element['service'],\n            appointmentUser: element['user']\n          };\n          if (element['gestion']) {} else {\n            this._appointment.setAppointment = appointment;\n          }\n        });\n      });\n    }\n    valorservice(id) {\n      this.btnservice.nativeElement.value = id;\n    }\n    valorPet(id) {\n      this.btnpet.nativeElement.value = id;\n    }\n    // elegir(appointmen:AppoIntment)\n    // {\n    //   // this._redender.addClass(this.btnGuardar.nativeElement, \"btnGuardarClass\")\n    //   this._redender.setStyle(this.btnGuardar.nativeElement, \"visibility\", \"collapse\");\n    //   this._redender.setStyle(this.btnActualizar.nativeElement, \"visibility\", \"visible\");\n    //   this._redender.setStyle(this.btnEliminar.nativeElement, \"visibility\", \"visible\");\n    //   this.txtid.nativeElement.value = appointmen.appointmentid;\n    //   // this.txtDescripcion.nativeElement.value= service.serviceDescription;\n    //   // this.txtNombre.nativeElement.value = service.serviceName;\n    //   // this.txtPrecio.nativeElement.value = service.servicePrice;\n    // }\n    autorizar(appointmen) {\n      this._appointment.estadoCita(appointmen.appointmentid, true).subscribe(response => {\n        if (response != null && response != undefined) {\n          alert('cita autorizada con exito');\n        } else {\n          alert('ERROR');\n        }\n        location.reload();\n      });\n    }\n    negar(appointmen) {\n      this._appointment.estadoCita(appointmen.appointmentid, false).subscribe(response => {\n        if (response != null && response != undefined) {\n          alert('cita negada con exito');\n        } else {\n          alert('ERROR');\n        }\n        location.reload();\n      });\n    }\n    guardar() {\n      const id = this.txtid.nativeElement.value;\n      // const descripcion = this.txtDescripcion.nativeElement.value;\n      // const nombre = this.txtNombre.nativeElement.value;\n      // const precio = this.txtPrecio.nativeElement.value;\n      let user = localStorage.getItem(\"id\");\n      if (this.btnpet.nativeElement.value == 0) {\n        this.btnpet.nativeElement.value = 1;\n      }\n      if (this.btnservice.nativeElement.value == 0) {\n        this.btnservice.nativeElement.value = 1;\n      }\n      var pet = {\n        user_person_personid: 0,\n        petId: this.btnpet.nativeElement.value,\n        petWeight: 0,\n        petName: \"\",\n        petBreed: \"\",\n        petCategory: \"\",\n        petAge: 0\n      };\n      var service = {\n        serviceId: this.btnservice.nativeElement.value,\n        serviceDescription: \"\",\n        serviceState: \"\",\n        serviceName: \"\",\n        serviceQualification: 0,\n        servicePrice: 0\n      };\n      let use = {\n        personId: user,\n        personCedula: 0,\n        personPhone: 0,\n        userEmail: \"\",\n        userPassword: \"\",\n        personName: \"\",\n        personAge: 0\n      };\n      this._appointment.saveAppointment(use, service, pet, new Date()).subscribe(response => {\n        if (response != null && response != undefined) {\n          alert('servicio guardado con exito');\n          localStorage.setItem(\"delevery\", \"0\");\n        } else {\n          alert('ERROR');\n        }\n      });\n      location.reload();\n    }\n    actualizar() {\n      const id = this.txtid.nativeElement.value;\n      // const descripcion = this.txtDescripcion.nativeElement.value;\n      // const nombre = this.txtNombre.nativeElement.value;\n      // const precio = this.txtPrecio.nativeElement.value;\n      let user = localStorage.getItem(\"id\");\n      var pet = {\n        user_person_personid: 0,\n        petId: this.btnpet.nativeElement.value,\n        petWeight: 0,\n        petName: \"\",\n        petBreed: \"\",\n        petCategory: \"\",\n        petAge: 0\n      };\n      var service = {\n        serviceId: this.btnservice.nativeElement.value,\n        serviceDescription: \"\",\n        serviceState: \"\",\n        serviceName: \"\",\n        serviceQualification: 0,\n        servicePrice: 0\n      };\n      this._appointment.updateAppointment(user, service, pet, id).subscribe(response => {\n        if (response != null && response != undefined) {\n          alert('servicio guardado con exito');\n          localStorage.setItem(\"delevery\", \"0\");\n        } else {\n          alert('ERROR');\n        }\n      });\n      location.reload();\n    }\n    cancelar() {\n      location.reload();\n    }\n    eliminar() {\n      const id = this.txtid.nativeElement.value;\n      console.log(\"el id\" + id);\n      this._appointment.removeAppointment(id).subscribe(response => {\n        console.log(response);\n        if (response == null) {\n          alert('cita  eliminada con exito');\n        } else {\n          alert('ERROR');\n        }\n        location.reload();\n      });\n    }\n    inicializar() {\n      if (localStorage.getItem(\"citasA\") == '0') {\n        localStorage.setItem(\"citasA\", \"-1\");\n        location.reload();\n      }\n    }\n    static #_ = this.ɵfac = function AutorizarCitaComponent_Factory(t) {\n      return new (t || AutorizarCitaComponent)(i0.ɵɵdirectiveInject(i1.AppointmentService), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AutorizarCitaComponent,\n      selectors: [[\"app-autorizar-cita\"]],\n      viewQuery: function AutorizarCitaComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(_c2, 5);\n          i0.ɵɵviewQuery(_c3, 5);\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(_c5, 5);\n          i0.ɵɵviewQuery(_c6, 5);\n          i0.ɵɵviewQuery(_c7, 5);\n          i0.ɵɵviewQuery(_c8, 5);\n          i0.ɵɵviewQuery(_c9, 5);\n          i0.ɵɵviewQuery(_c10, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.txtid = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.datefecha = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectPet = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectService = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectUser = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btnGuardar = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btnActualizar = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btnCancelar = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btnEliminar = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btnservice = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btnpet = _t.first);\n        }\n      },\n      decls: 29,\n      vars: 1,\n      consts: [[\"txtid\", \"\"], [1, \"boxPrincipal\"], [1, \"container\"], [\"id\", \"formCitas\"], [\"type\", \"text\", \"placeholder\", \"Id\", 1, \"form-control\", \"my-2\", 2, \"visibility\", \"hidden\"], [1, \"display-6\", \"center\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n      template: function AutorizarCitaComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"form\", 3);\n          i0.ɵɵelement(3, \"input\", 4, 0);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(5, \"br\")(6, \"br\")(7, \"br\");\n          i0.ɵɵelementStart(8, \"div\")(9, \"h2\", 5);\n          i0.ɵɵtext(10, \" Citas\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"table\", 6)(12, \"thead\")(13, \"tr\")(14, \"th\");\n          i0.ɵɵtext(15, \"Seleccion\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"th\");\n          i0.ɵɵelementStart(17, \"th\");\n          i0.ɵɵtext(18, \"Numero Cita\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"th\");\n          i0.ɵɵtext(20, \"Fecha Asignada\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"th\");\n          i0.ɵɵtext(22, \"Mascota\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"th\");\n          i0.ɵɵtext(24, \"Servicio\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"th\");\n          i0.ɵɵtext(26, \"Cliente\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(27, \"tbody\");\n          i0.ɵɵtemplate(28, AutorizarCitaComponent_tr_28_Template, 17, 5, \"tr\", 7);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(28);\n          i0.ɵɵproperty(\"ngForOf\", ctx.getAppointment);\n        }\n      },\n      dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm],\n      styles: [\".boxPrincipal[_ngcontent-%COMP%]{width:90%}\"]\n    });\n  }\n  return AutorizarCitaComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}